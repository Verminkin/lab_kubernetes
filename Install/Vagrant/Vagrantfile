# Define the number of worker nodes
num_workers = 2

Vagrant.configure("2") do |config|

  # Set the box to use
  config.vm.box = "debian/bullseye64"

  # Configure the provider
  config.vm.provider "virtualbox" do |vb|
    vb.memory = 2048
    vb.cpus = 2
  end

  # Define the master node
  config.vm.define "master" do |node|
    node.vm.hostname = "master"
    node.vm.network "private_network", ip: "192.168.56.10"

    # Provision the master node
    config.vm.provision "shell", name: "install-essential-tools", path: "script/install-essential-tools.sh", privileged: false
    config.vm.provision "shell", name: "allow-bridge-nf-traffic", path: "script/allow-bridge-nf-traffic.sh", privileged: false
    config.vm.provision "shell", name: "install-containerd", path: "script/install-containerd.sh", privileged: false
    config.vm.provision "shell", name: "install-kubeadm", path: "script/install-kubeadm.sh", privileged: false
    config.vm.provision "shell", name: "update-kubelet-config", path: "script/update-kubelet-config.sh", args: ["eth1"], privileged: false
    config.vm.provision "shell", name: "launch-vault", path: "script/launch-vault.sh", privileged: false
    config.vm.provision "shell", name: "init-kube-master", path: "script/init-kube-master.sh", privileged: false

    # Create the join script for worker nodes
    #config.vm.provision "shell", inline: "sudo kubeadm token create --print-join-command > /vagrant/join.sh"
  end

  # Define the worker nodes
  num_workers.times do |i|
    config.vm.define "worker-#{i}" do |node|
      node.vm.hostname = "worker-#{i}"
      node.vm.network "private_network", ip: "192.168.56.#{10 + i}"

      # Copy the join script from the master node
      #config.vm.provision "shell", inline: "curl -sS 192.168.56.10:8000/join.sh > join.sh"

      #config.vm.provision "shell", name: "launch-kube-worker", path: "script/launch-kube-worker.sh", privileged: false

    end
  end


end
